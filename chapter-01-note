SOLID 设计原则：
	单一设计原则：
	一个架构，使您不得不在大量的类中做很多微小的更改（在接口的传递过程中需要频繁的根据使用对象修改接口），无论是否相关（如在层次结构中），通常都是一种代码气味（code smell）——一个不太对劲的迹象。现在，这完全取决于情况：如果你要重命名一个在 100 个地方使用的符号，我认为这通常是可以的，因为 ReSharper、CLion 或任何你使用的 IDE 实际上将允许你执行重构并且将更改到处传播。但是当你需要完全修改接口时...嗯，那可能是一个非常痛苦的过程！

	开闭原则：
	里氏替换原则：
	接口隔离原则：
	依赖注入原则：
